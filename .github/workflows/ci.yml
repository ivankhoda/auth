# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: auth
    services:
      postgres:
        image: postgres:-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_HOST: db
          POSTGRES_DB: auth_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Add or replace dependency steps here
      - name: Run create DB
        run: RAILS_ENV=test bundle exec rake parallel:create

      - name: Run load from schema
        run: RAILS_ENV=test bundle exec rake parallel:rake[db:schema:load]

      - name: Run migrate DB
        run: RAILS_ENV=test bundle exec rake parallel:migrate

      - name: Run create tmp DB
        run: RAILS_ENV=test bundle exec rake tmp:create

      - name: Run Rubocop
        run: bundle exec rubocop -c .rubocopignorebuild.yml

      - name: Run rspec
        run: COVERAGE=true RAILS_ENV=test bundle exec parallel_rspec ./spec

      - name: Stash Coverage Results
        run: |
          mkdir coverage_results
          cp -R coverage/.resultset.json coverage_results/.resultset-0.json

      - name: Run report_coverage
        run: RAILS_ENV=test bundle exec rake simplecov:report_coverage

      - name: Save coverage
        uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: coverage
          path: ./coverage